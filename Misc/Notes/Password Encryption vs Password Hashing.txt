Password encryption = like having a SAFE (encrypted password) and THE KEY (decryptor) right next to it... Not safe

Password hashing:
- 1) Repeatable
	- You enter password (on register) and it gets stored as a HASH (mashed value) in DB
	- You enter password (on login), SERVER converts it to HASH and HASH is the same as the one already stored in DB
- 2) One-way
	- You can't use a hash to get the original password
	- You can only confirm if it MATCHES the password

Login > Hash entered password -> Check if existing hash in database matches the hash that was just generated

App doesn't store your password, that's why Forgotten Password sends you a new one

SALT is used to make password hasing STRONGER

---

"At the very least we must hash user’s passwords, but hash functions like SHA-2 and MD5 are too fast to be secure. Using a KDF like Bcrypt provides security benefits over fast hashes because it is computationally expensive and slow. If an attacker gains access to a database of password hashes made with fast algorithms it is easy for them to “reverse” the hashes by guessing different inputs and seeing if the outputs match."